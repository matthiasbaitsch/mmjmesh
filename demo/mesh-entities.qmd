---
title: "Plot Demo"
format: 
    pdf: default
---

```{julia}
using Pkg
Pkg.activate(".")

using Revise
import CairoMakie

using MMJMesh
using MMJMesh.Meshes
using MMJMesh.Topologies
using MMJMesh.Plots
using MMJMesh.Utilities





a = 3
m = makemeshonrectangle(9.0, 4.5, 2a, a)

struct MeshEntity{DE}
    mesh::Mesh
    index::Int
end

entity(mesh::Mesh, dim::Int, index::Int) = MeshEntity{dim}(mesh, index)
# node(m::Mesh{DT, DG}, index::Int) where {DT, DG} = entity(m, 0, index)
# edge(m::Mesh{DT, DG}, index::Int) where {DT, DG} = entity(m, 1, index)
# face(m::Mesh{DT, DG}, index::Int) where {DT, DG} = entity(m, 2, index)
# solid(m::Mesh{DT, DG}, index::Int) where {DT, DG} = entity(m, 3, index)

coordinates(e::MeshEntity{0}) = e.mesh.geometry.points.coordinates[:, e.index]
coordinates(e::MeshEntity{DE}) where {DE} = e.mesh.geometry.points.coordinates[:, links(m.topology, DE, 0)[e.index]]

node = entity(m, 0, 11)
edge = entity(m, 1, 12)

println("Node coordinates: ", coordinates(node))
println("Eode coordinates: ", coordinates(edge))

```

