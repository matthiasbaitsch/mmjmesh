{
  "hash": "a70f4a72d2c7ad1a77186c1e053ec973",
  "result": {
    "engine": "jupyter",
    "markdown": "# Plotting\n\nThis chapter is utterly incomplete and probably not worth reading.\n\n\n\n## Plot a 1D mesh\n\n### On a straight line\n\n::: {#3762a150 .cell execution_count=2}\n``` {.julia .cell-code}\nm = makemeshoninterval(0, 4, 20)\nmplot(m) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n![](plot_files/figure-html/cell-3-output-1.svg){}\n:::\n:::\n\n\nNodes hidden if too many.\n\n::: {#45af8bcb .cell execution_count=3}\n``` {.julia .cell-code}\nm = makemeshoninterval(0, 4, 60)\nmplot(m) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n![](plot_files/figure-html/cell-4-output-1.svg){}\n:::\n:::\n\n\nOne value per node\n\n::: {#e89b2542 .cell execution_count=4}\n``` {.julia .cell-code}\nmplot(m, -1.1 .+ 2.6 * rand(nnodes(m))) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n![](plot_files/figure-html/cell-5-output-1.svg){}\n:::\n:::\n\n\nOne value per element\n\n::: {#ea355d8a .cell execution_count=5}\n``` {.julia .cell-code}\nmplot(m, -1.1 .+ 2.2 * rand(nedges(m))) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n![](plot_files/figure-html/cell-6-output-1.svg){}\n:::\n:::\n\n\nTwo values per element\n\n::: {#ef39274d .cell execution_count=6}\n``` {.julia .cell-code}\nmplot(m, -1.1 .+ 2.2 * rand(2, nedges(m))) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n![](plot_files/figure-html/cell-7-output-1.svg){}\n:::\n:::\n\n\n### Vertical\n\n::: {#0d447fcf .cell execution_count=7}\n``` {.julia .cell-code}\nm = makemeshoninterval(π, 3π, 20, t -> [0; t])\nmplot(m, -1.1 .+ 3.2 * rand(nedges(m))) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n![](plot_files/figure-html/cell-8-output-1.svg){}\n:::\n:::\n\n\n### On a spiral\n\n::: {#5383828f .cell execution_count=8}\n``` {.julia .cell-code}\nm = makemeshoninterval(π, 3π, 20, t -> t * [cos(t); sin(t)])\nmplot(m, -1.1 .+ 3.2 * rand(2, nedges(m))) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n![](plot_files/figure-html/cell-9-output-1.svg){}\n:::\n:::\n\n\n### Customize plot\n\nPlot customization works like this:\n\n::: {#ffbe5ff3 .cell execution_count=9}\n``` {.julia .cell-code}\nf, ax = mplot(m, -1.1 .+ 3.2 * rand(2, nedges(m))) |> mconf()\nax.title = \"Spiral with reversed vertical axis\"\nax.yreversed = true\nf\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n![](plot_files/figure-html/cell-10-output-1.svg){}\n:::\n:::\n\n\nDocumentation on plot axis can be found on the [Makie documentation](https://docs.makie.org/stable/reference/blocks/axis) which unfortunately is quite hard to read.\n\n## Plot a 2D mesh\n\n### Quad mesh\n\n::: {#0d8e0a37 .cell execution_count=10}\n``` {.julia .cell-code}\na = 80\nm = makemeshonrectangle(9.0, 4.5, 2a, a)\nprintln(\"Number of nodes is Nn = \", (a + 1) * (2a + 1))\nprint(\"Links...\")\n@time l12 = links(m.topology, 1, 2);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNumber of nodes is Nn = 13041\nLinks...  0.237752 seconds (1.11 M allocations: 86.500 MiB, 74.10% gc time, 6.19% compilation time)\n```\n:::\n:::\n\n\nDefault color\n\n::: {#0c16e078 .cell execution_count=11}\n``` {.julia .cell-code}\nmplot(m, edgesvisible=true, edgecolor=:hotpink) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n![](plot_files/figure-html/cell-12-output-1.svg){}\n:::\n:::\n\n\nColors for nodes\n\n::: {#a3939ad3 .cell execution_count=12}\n``` {.julia .cell-code}\nmplot(m, 4.1 * (rand(nnodes(m)) .- 0.25)) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n![](plot_files/figure-html/cell-13-output-1.svg){}\n:::\n:::\n\n\nColors for elements\n\n::: {#5fa15fbd .cell execution_count=13}\n``` {.julia .cell-code}\nmplot(m, 4.1 * (rand(nfaces(m)) .- 0.25)) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n![](plot_files/figure-html/cell-14-output-1.svg){}\n:::\n:::\n\n\n### Triangle mesh\n\n::: {#454e89f2 .cell execution_count=14}\n``` {.julia .cell-code}\na = 20\nm = makemeshonrectangle(9.0, 4.5, 2a, a, TRIANGLE)\nprintln(\"Nn = \", (a + 1) * (2a + 1))\nprint(\"Links (1, 2):\")\n@time l12 = links(m.topology, 1, 2);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNn = 861\nLinks (1, 2):  0.004417 seconds (101.71 k allocations: 8.227 MiB)\n```\n:::\n:::\n\n\nDefault color\n\n::: {#71a5f6d0 .cell execution_count=15}\n``` {.julia .cell-code}\nmplot(m, edgesvisible=true) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n![](plot_files/figure-html/cell-16-output-1.svg){}\n:::\n:::\n\n\nColors for nodes\n\n::: {#f2a20cd5 .cell execution_count=16}\n``` {.julia .cell-code}\nmplot(m, 4.1 * (rand(nnodes(m)) .- 0.25)) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n![](plot_files/figure-html/cell-17-output-1.svg){}\n:::\n:::\n\n\nColors for elements\n\n::: {#30febcff .cell execution_count=17}\n``` {.julia .cell-code}\nmplot(m, 4.1 * (rand(nfaces(m)) .- 0.25)) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n![](plot_files/figure-html/cell-18-output-1.svg){}\n:::\n:::\n\n\n## Plot options\n\n::: {#731445ec .cell execution_count=18}\n``` {.julia .cell-code}\na = 10\nm1 = makemeshonrectangle(4, 2, 2a, a)\nmplot(m1, 3 * rand(nfaces(m1)),\n    nodesvisible=true, nodecolor=:hotpink, nodesize=12,\n    edgesvisible=true, edgecolor=:lightblue, edgelinewidth=3,\n    featureedgecolor=:red, featureedgelinewidth=6,\n    facecolormap=:bluesreds\n) |> mconf()\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n![](plot_files/figure-html/cell-19-output-1.svg){}\n:::\n:::\n\n\n::: {#2afc3c43 .cell execution_count=19}\n``` {.julia .cell-code}\nm2 = makemeshoninterval(0, 4, 20)\nmplot(m2, rand(nnodes(m2)),\n    lineplotoutlinesvisible=true,\n    edgecolor=:blue, edgelinewidth=10,\n    lineplotscale=0.3,\n    lineplotoutlinescolor=:hotpink,\n    lineplotoutlineslinewidth=2.0,\n    lineplotfacescolormap=:bluesreds\n) |> mconf(title=\"Test Plot\")\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n![](plot_files/figure-html/cell-20-output-1.svg){}\n:::\n:::\n\n\n",
    "supporting": [
      "plot_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}