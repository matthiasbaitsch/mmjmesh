---
engine: julia
---

# Adaptive sampling

```{julia}
#| include: false
include("setup.jl")
using MMJMesh.Plots: sample1d
```

Plot function

```{julia}
function doplot(xy)
    f = lines(xy)
    scatter!(xy, color=:darkred, markersize=5)
    return f
end;
```

Linear function

```{julia}
x = parameter(R)
sample1d(x, -1, 1) |> doplot
```

Parabola

```{julia}
sample1d(x^2, -1, 1) |> doplot
```

Curved in one region

```{julia}
sample1d(x^100, 0, 1) |> doplot
```

Singular point

```{julia}
sample1d(sin(1.0 / x), 0.0, 0.05, maxangle=0.05, npoints=21) |> doplot
```

```{julia}
@time size(sample1d(sin(1.0 / x), 0.0, 0.05, maxangle=0.1), 2)
```

Multiple curvatures

```{julia}
sample1d(sin(30 * sin(x)), 0, 2pi) |> doplot
```

Discontinuity

```{julia}
sample1d(1 / x, 0, 1, yscale=1e-5) |> doplot
```

Insert root

```{julia}
sample1d(-0.3 + x, -1, 1, ir=true) |> doplot
```

Non smooth function

```{julia}
sample1d(x -> abs(x), -1, 1) |> doplot
```

Local peak

```{julia}
a = 0.01
sample1d(x + a / (a + x^2), -1, 1) |> doplot
```

Circle

```{julia}
sample1d(ParametricCurve(cos(x), sin(x)), 0, 2pi) |> doplot
```